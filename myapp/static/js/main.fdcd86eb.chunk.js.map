{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","image","designation","description","Home","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","RenderDish","top","RenderComments","comments","postComment","dishId","cmnts","commnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","CommentForm","rating","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdcd86eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"> \r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home \r\n                                    </NavLink> \r\n                                </NavItem>    \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"> \r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us \r\n                                    </NavLink>    \r\n                                </NavItem> \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"> \r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu \r\n                                    </NavLink>    \r\n                                </NavItem>    \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"> \r\n                                        <span className=\"fa fa-info fa-lg\"></span> Contact Us \r\n                                    </NavLink>    \r\n                                </NavItem> \r\n                            </Nav>\r\n                            {/* add a button to the Navbar to enable toggling the modal: */}\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>    \r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>   \r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\"> \r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron> \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>   \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading} \r\n                        errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home; ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    // function RenderMenuItem (props) {}\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card> \r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />                    \r\n                        <CardImgOverlay>\r\n                            <CardTitle> {dish.name} </CardTitle>\r\n                        </CardImgOverlay>  \r\n                </Link>      \r\n            </Card>\r\n        );\r\n    }\r\n\r\n    // function Menu (props) {}\r\n    const Menu = (props) => {\r\n        // map (JS keyword): iterating over every dish in the dishes array here\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                // key: every item require key attribute to specift it.\r\n                // the key helps React to recognise each one of these elements, uniquely. \r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick}/>\r\n                </div>    \r\n            );\r\n        }); // take the JS objects\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n         // return what needs to diaplay on the UI in this conponent. (return view)\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> <Link to='home'>Home</Link> </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>    \r\n                </div>    \r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n//for making use of form validation\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(\r\n          values.firstname,\r\n          values.lastname,\r\n          values.telnum,\r\n          values.email,\r\n          values.agree,\r\n          values.contactType,\r\n          values.message\r\n        );\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n\r\n        return(   \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n    \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* using react-redux-form */}\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us Your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>    \r\n            </div>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {  Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"col-12\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>    \r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else \r\n            return (\r\n                <Stagger in>\r\n                    <Fade in>\r\n                        <RenderLeader leader={leader} />\r\n                    </Fade>\r\n                </Stagger>\r\n            );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;         ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb ,BreadcrumbItem,\r\n    Button, Row, Col, Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n    // function RenderDish(props){}\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform\r\n                        in\r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardBody>\r\n                                <CardTitle> {dish.name} </CardTitle>\r\n                                <CardText> {dish.description} </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>    \r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    // function RenderComments(props){}\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments != null) {\r\n            const cmnts = comments.map((commnts) => {\r\n                return (\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            <Fade in>\r\n                                <li key={commnts.id} >\r\n                                    <p> {commnts.comment} </p>\r\n                                    <p> -- {commnts.author},\r\n                                        &nbsp;\r\n                                        {new Intl.DateTimeFormat('en-US', {\r\n                                            year: 'numeric',\r\n                                            month: 'short',\r\n                                            day: '2-digit'\r\n                                        }).format(new Date(Date.parse(commnts.date)))}\r\n                                    </p>\r\n                                </li>\r\n                            </Fade>\r\n                        </Stagger>    \r\n                    </ul>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4> Comments </h4>\r\n                    {cmnts}\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );  \r\n        // if comments is empty     \r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    \r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem> <Link to='home'>Home</Link> </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>    \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <RenderComments comments={props.comments} \r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div>    \r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n    \r\nexport default DishDetail;\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nexport class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Button outline onClick={this.toggleModal}>\r\n                        <span className=\"fa fa-pencil fa-lg\"> Submit comment</span>\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}> Submit comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"col-12 col-md-9\">\r\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                            </Control.select>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"author\" md={2}>Your name</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\r\n                                            <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"feedback\" md={2}>Your feedback</Label>\r\n                                        <Col md={10}>\r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" validators={{ required }} />\r\n                                            <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                </LocalForm>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n  const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'comments', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n// Thunk\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comments\r\n});\r\n\r\n// --- promotions\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n// --- leader\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n// --- feedback\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\r\n  \r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n\r\n    return fetch(baseUrl + \"feedback\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n          throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n        console.log(\"post feedbacks\", error.message);\r\n        alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};","// action type\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';  //DISHES_LOADING means the dishes are currently being fetched.\r\nexport const DISHES_FAILED = 'DISHES_FAILED'; //DISHES_FAILED means that you failed to fetch the dishes information from a server\r\nexport const ADD_DISHES = 'ADD_DISHES'; // ADD_DISHES means you want to add the dishes into your store\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () =>dispatch(fetchLeaders()),\r\n    resetFeedbackForm: () => {\r\n        dispatch(actions.reset(\"feedback\"));\r\n    },\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(\r\n        postFeedback(firstname, lastname, telnum, email, agree, contactType, message)\r\n    )\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n          }\r\n\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n              <Header />\r\n                  <TransitionGroup>\r\n                      <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                          <Switch location={this.props.location}>\r\n                                <Route path='home' component={HomePage} />\r\n                                <Route exact path='/aboutus' component={() => <About \r\n                                    leaders={this.props.leaders.leaders}\r\n                                    leaderLoading={this.props.leaders.isLoading}\r\n                                    leaderErrMess={this.props.leaders.errMess} />} \r\n                                    />} \r\n                                />\r\n                                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                                <Route path='/menu/:dishId' component={DishWithId} />\r\n                                <Route exact path='/contactus' component={() => \r\n                                    <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                        postFeedback={this.props.postFeedback} />} \r\n                                    />\r\n                                <Redirect to=\"/home\" />\r\n                         </Switch>\r\n                      </CSSTransition>\r\n                  </TransitionGroup>\r\n              <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n/* <Redirect to=\"/Home\" /> this is a default path. anything dosemt match Home or Menu, \r\nwill be returned to Home */","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = \r\n    (state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders:[]}, \r\n        action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_LEADERS:\r\n                return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n            case ActionTypes.LEADERS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n            case ActionTypes.LEADERS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\n// import { LEADERS } from '../shared/leaders';\r\n\r\n// export const Leaders = (state = LEADERS, action) => {\r\n//     switch (action.type) {\r\n//         default:\r\n//           return state;\r\n//       }\r\n// };","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// import React from 'react';\r\nimport React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {  \r\n    return (\r\n       //adding BrowserRouter. the application now is congigured to make use of the react router\r\n       <Provider store={store}>\r\n          <BrowserRouter>\r\n              <div className=\"App\">\r\n                  <Main />\r\n              </div>\r\n          </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n{/* // function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App; */}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}